% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coefplot_lm.R
\name{coefplot_lm}
\alias{coefplot_lm}
\title{Coefficient plot for lm object}
\usage{
coefplot_lm(
  lm_object,
  CI_level = 0.95,
  two_sided = TRUE,
  intercept = FALSE,
  cex.var = 0.8,
  cex.pts = 0.9,
  col.pts = 1,
  pch.pts = 20,
  var.las = 2,
  main = NULL,
  xlab = NULL,
  ylab = NULL,
  mar = c(1, 8, 5.1, 2),
  offset = 0.1,
  ...
)
}
\arguments{
\item{lm_object}{output object from \code{lm}}

\item{CI_level}{confidence level}

\item{two_sided}{logical, a single-sided result is returned when \code{FALSE}}

\item{intercept}{logical, should the intercept be drawn too?}

\item{cex.var}{fontsize of the variable names}

\item{cex.pts}{size of data points}

\item{col.pts}{color of points and segments, default is black}

\item{pch.pts}{symbol of points, default is solid dot}

\item{var.las}{orientation of variable names against the axis, default is 2. see the usage of las in par}

\item{main}{The main title (on top) using font and size (character expansion) par("font.main") and color par("col.main")}

\item{xlab}{X axis label using font and character expansion par("font.lab") and color par("col.lab")}

\item{ylab}{Y axis label, same font attributes as xlab}

\item{mar}{numerical vector of the form c(bottom, left, top, right) which gives the number of lines of margin to be specified on the four sides of the plot. The default is c(1, 8, 5.1, 2).}

\item{offset}{add extra spaces to separate from the existing dots}

\item{...}{further arguments passed to the base R plot method}
}
\value{
Plot of the coefficients from a lm fit. Invisibly returns the 
accompanying confidence interval.
}
\description{
Draw a simple coefficient plot for an lm object
}
\details{
The function takes the output from \code{lm} and draws a plot 
with the parameter estimates and their surrounding confidence 
intervals.

A dataframe containing the confidence intervals is invisibly returned.
}
\examples{
y1 <- rnorm(1000,50,23)
y2 <- rbinom(1000, 1, prob = 0.72)
x1 <- rnorm(1000, 50, 2)
x2 <- rbinom(1000, 1, prob = 0.63)
x3 <- rpois(1000, 2)
x4 <- runif(1000, 40, 100)
x5 <- rbeta(1000, 2, 2)
 
longnames <- c("a long name01", "a long name02",
"a long name03", "a long name04", "a long name05")
 
fit1 <- lm(y1 ~ x1 + x2 + x3 + x4 + x5)
coefplot_lm(fit1)
coefplot_lm(fit1, intercept = TRUE)
}
